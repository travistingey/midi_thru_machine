#!/usr/bin/env bash
# run-test <lua-file> …  – feeds each file into matron and streams the reply
# This runs tests in the actual Norns runtime (Lua 5.3 with full APIs)

set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_section() {
    echo -e "${BLUE}[SECTION]${NC} $1"
}

# Check if we're running on Norns or remotely
if [[ "$(hostname)" == "norns" ]]; then
    # Running directly on Norns device
    print_status "Running tests directly on Norns device using maiden repl..."
    
    for file in "$@"; do
        print_section "Testing: $file"
        if cat "$file" | maiden repl; then
            print_status "✅ $file passed"
        else
            print_error "❌ $file failed"
            exit 1
        fi
    done
else
    # Running remotely, need to SSH to Norns
    print_status "Running tests remotely on Norns device..."
    
    # Load environment variables if .env exists
    if [ -f .env ]; then
        export $(cat .env | grep -v '^#' | xargs)
    fi
    
    # Set defaults if not provided
    NORNS_HOST=${NORNS_HOST:-we@norns.local}
    NORNS_PASS=${NORNS_PASS:-sleep}
    SSH_OPTS=${SSH_OPTS:-"-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"}
    
    # SSH helper function
    ssh_norns() {
        sshpass -p "$NORNS_PASS" ssh $SSH_OPTS "$NORNS_HOST" "$@"
    }
    
    # Test connection first
    print_status "Testing connection to Norns device..."
    if ! ssh_norns "echo 'Connection successful'"; then
        print_error "Cannot connect to Norns device. Please check your configuration."
        exit 1
    fi
    
    # Run each test file
    for file in "$@"; do
        print_section "Testing: $file"
        
        # Create a temporary script to run the test
        local temp_script="/tmp/test_$(basename "$file")"
        
        # Copy the test file to Norns
        sshpass -p "$NORNS_PASS" rsync -e "ssh $SSH_OPTS" "$file" "$NORNS_HOST:$temp_script"
        
        # Run the test using maiden repl
        if ssh_norns "cat $temp_script | maiden repl"; then
            print_status "✅ $file passed"
        else
            print_error "❌ $file failed"
            ssh_norns "rm -f $temp_script"
            exit 1
        fi
        
        # Clean up
        ssh_norns "rm -f $temp_script"
    done
fi

print_status "All tests completed successfully!" 